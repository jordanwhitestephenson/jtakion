(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{"/vcS":function(t,e,n){"use strict";n.d(e,"a",function(){return _}),n.d(e,"b",function(){return d}),n.d(e,"c",function(){return r}),n.d(e,"d",function(){return l}),n.d(e,"e",function(){return p}),n.d(e,"f",function(){return c}),n.d(e,"g",function(){return b}),n.d(e,"h",function(){return O}),n.d(e,"i",function(){return j}),n.d(e,"j",function(){return k}),n.d(e,"k",function(){return o}),n.d(e,"l",function(){return h}),n.d(e,"m",function(){return m}),n.d(e,"n",function(){return g}),n.d(e,"o",function(){return w}),n.d(e,"p",function(){return y}),n.d(e,"q",function(){return s}),n.d(e,"r",function(){return S}),n.d(e,"s",function(){return f}),n.d(e,"t",function(){return a}),n.d(e,"u",function(){return u}),n.d(e,"v",function(){return i});const i="username",r="email",a="code",o="phone",u="password",d="country-dial-code-select",s="+1",f="amplify-auth-source",c="amplify-redirected-from-hosted-ui",h="amplify-authenticator-authState",p="Phone number can not be empty",l="No Auth module found, please ensure @aws-amplify/auth is imported",g="No Storage module found, please ensure @aws-amplify/storage is imported",m="No Interactions module found, please ensure @aws-amplify/interactions is imported",b="SETUP_TOTP",w="User has not set up software token mfa",y="User has not verified software token mfa",S="SUCCESS",_="auth",j="UI Auth",O="ToastAuthError",k="AuthStateChange"},GWfx:function(t,e,n){"use strict";n.r(e),n.d(e,"amplify_federated_sign_in",function(){return s});var i=n("bRKV"),r=n("Nt7R"),a=n("s1tr"),o=n("v4IS"),u=n("/vcS");const d=new r.a("amplify-federated-sign-in"),s=class{constructor(t){Object(i.k)(this,t),this.authState=a.a.SignIn,this.federated={}}componentWillLoad(){if(!o.a||"function"!=typeof o.a.configure)throw new Error(u.d);const{oauth:t={}}=o.a.configure();t.domain?this.federated.oauth_config=Object.assign(Object.assign({},this.federated.oauth_config),t):t.awsCognito&&(this.federated.oauth_config=Object.assign(Object.assign({},this.federated.oauth_config),t.awsCognito)),t.auth0&&(this.federated.auth0=Object.assign(Object.assign({},this.federated.auth0),t.auth0))}render(){return this.federated?Object.values(a.a).includes(this.authState)?(d.debug("federated Config is",this.federated),Object(i.i)("amplify-form-section",{"data-test":"federated-sign-in-section"},Object(i.i)("amplify-section",{"data-test":"federated-sign-in-body-section"},Object(i.i)("amplify-federated-buttons",{authState:this.authState,"data-test":"federated-sign-in-buttons",federated:this.federated})))):null:(d.debug("federated prop is empty. show nothing"),d.debug("federated={google_client_id: , facebook_app_id: , amazon_client_id}"),null)}}}}]);